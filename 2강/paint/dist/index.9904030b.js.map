{"mappings":"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","sources":["src/js/index.js"],"sourcesContent":["class DrawingBoard {\n  MODE = \"NONE\";\n  IsMouseDown = false;\n  eraserColor = \"#ffffff\";\n  backgroundColor = \"#ffffff\";\n  constructor() {\n    this.assignElement();\n    this.initContext();\n    this.initCanvasBackgroundColor();\n    this.addEvent();\n  }\n  assignElement() {\n    this.containerEl = document.getElementById(\"container\");\n    this.canvasEl = this.containerEl.querySelector(\"#canvas\");\n    this.toolbarEl = this.containerEl.querySelector(\"#toolbar\");\n    this.brushEl = this.toolbarEl.querySelector(\"#brush\");\n    this.colorPickerEl = this.toolbarEl.querySelector(\"#colorPicker\");\n    this.brushPanelEl = this.containerEl.querySelector(\"#brushPanel\");\n    this.brushSliderEl = this.brushPanelEl.querySelector(\"#brushSize\");\n    this.brushSizePreviewEl =\n      this.brushPanelEl.querySelector(\"#brushSizePreview\");\n    this.eraserEl = this.toolbarEl.querySelector(\"#eraser\");\n  }\n\n  initContext() {\n    this.context = this.canvasEl.getContext(\"2d\");\n  }\n\n  initCanvasBackgroundColor() {\n    this.context.fillStyle = this.backgroundColor;\n    this.context.fillRect(0, 0, this.canvasEl.width, this.canvasEl.height);\n  }\n\n  addEvent() {\n    this.brushEl.addEventListener(\"click\", this.onClickBrush.bind(this));\n    this.canvasEl.addEventListener(\"mousedown\", this.onMouseDown.bind(this));\n    this.canvasEl.addEventListener(\"mousemove\", this.onMouseMove.bind(this));\n    this.canvasEl.addEventListener(\"mouseup\", this.onMouseUp.bind(this));\n    this.canvasEl.addEventListener(\"mouseout\", this.onMouseOut.bind(this));\n    this.brushSliderEl.addEventListener(\n      \"input\",\n      this.onChangeBrushSize.bind(this)\n    );\n    this.colorPickerEl.addEventListener(\"input\", this.onChangeColor.bind(this));\n    this.eraserEl.addEventListener(\"click\", this.onClickEraser.bind(this));\n  }\n\n  onClickEraser(event) {\n    const IsActive = event.currentTarget.classList.contains(\"active\");\n    this.MODE = IsActive ? \"NONE\" : \"ERASER\";\n    this.canvasEl.style.cursor = IsActive ? \"default\" : \"crosshair\";\n    this.brushPanelEl.classList.add(\"hide\");\n    this.eraserEl.classList.toggle(\"active\");\n    this.brushEl.classList.remove(\"active\");\n  }\n\n  onMouseOut() {\n    if (this.MODE === \"NONE\") return;\n    this.IsMouseDown = false;\n  }\n\n  onChangeColor(event) {\n    this.brushSizePreviewEl.style.backgroundColor = event.target.value;\n  }\n\n  onChangeBrushSize(event) {\n    this.brushSizePreviewEl.style.width = `${event.target.value}px`;\n    this.brushSizePreviewEl.style.height = `${event.target.value}px`;\n  }\n\n  onMouseUp() {\n    if (this.MODE === \"NONE\") return;\n    this.IsMouseDown = false;\n  }\n\n  onMouseDown(event) {\n    if (this.MODE === \"NONE\") return;\n    this.IsMouseDown = true;\n    const currentPosition = this.getMousePosition(event);\n    this.context.beginPath();\n    this.context.moveTo(currentPosition.x, currentPosition.y);\n    this.context.lineCap = \"round\";\n    if (this.MODE === \"BRUSH\") {\n      this.context.strokeStyle = this.colorPickerEl.value;\n      this.context.lineWidth = this.brushSliderEl.value;\n    } else if (this.MODE === \"ERASER\") {\n      this.context.strokeStyle = this.eraserColor;\n      this.context.lineWidth = 50;\n    }\n  }\n\n  onMouseMove(event) {\n    if (!this.IsMouseDown) return;\n    const currentPosition = this.getMousePosition(event);\n    this.context.lineTo(currentPosition.x, currentPosition.y);\n    this.context.stroke();\n  }\n\n  getMousePosition(event) {\n    const boundaries = this.canvasEl.getBoundingClientRect();\n    return {\n      x: event.clientX - boundaries.left,\n      y: event.clientY - boundaries.top,\n    };\n  }\n\n  onClickBrush(event) {\n    const IsActive = event.currentTarget.classList.contains(\"active\");\n    this.MODE = IsActive ? \"NONE\" : \"BRUSH\";\n    this.canvasEl.style.cursor = IsActive ? \"default\" : \"crosshair\";\n    this.brushPanelEl.classList.toggle(\"hide\");\n    this.brushEl.classList.toggle(\"active\");\n    this.eraserEl.classList.remove(\"active\");\n  }\n}\n\nnew DrawingBoard();\n"],"names":["DrawingBoard","MODE","IsMouseDown","eraserColor","backgroundColor","constructor","this","assignElement","initContext","initCanvasBackgroundColor","addEvent","containerEl","document","getElementById","canvasEl","querySelector","toolbarEl","brushEl","colorPickerEl","brushPanelEl","brushSliderEl","brushSizePreviewEl","eraserEl","context","getContext","fillStyle","fillRect","width","height","addEventListener","onClickBrush","bind","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onChangeBrushSize","onChangeColor","onClickEraser","event","IsActive","currentTarget","classList","contains","style","cursor","add","toggle","remove","target","value","currentPosition","getMousePosition","beginPath","moveTo","x","y","lineCap","strokeStyle","lineWidth","lineTo","stroke","boundaries","getBoundingClientRect","clientX","left","clientY","top"],"version":3,"file":"index.9904030b.js.map"}